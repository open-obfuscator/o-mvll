name: 'O-MVLL Xcode'
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: O-MVLL Build Plugins
        shell: bash
        run: |
          curl -LO https://open-obfuscator.build38.io/static/omvll-v1.4.0-macos-deps.tar
          mkdir -p /tmp/third-party-xcode16
          tar xvf ./omvll-v1.4.0-macos-deps.tar --directory=/tmp/third-party-xcode16
          docker run --rm \
            -v /tmp/third-party-xcode16/omvll-v1.4.0-macos-deps:/deps \
            -v $GITHUB_WORKSPACE:/o-mvll \
            openobfuscator/omvll-build:latest bash /o-mvll/scripts/docker/xcode_16_compile.sh
      - name: O-MVLL Sign Xcode Plugin
        uses: indygreg/apple-code-sign-action@v1.0
        with:
          input_path: ${{ github.workspace }}/src/build_xcode/omvll-xcode_unsigned.dylib
          output_path: ${{ github.workspace }}/src/build_xcode/omvll-xcode.dylib
          p12_file: ${{ github.workspace }}/scripts/certificates/SigningCertificate.p12
          p12_password: ${{ secrets.certificate_password }}
      - name: O-MVLL Sign NDK Plugin
        uses: indygreg/apple-code-sign-action@v1.0
        with:
          input_path: ${{ github.workspace }}/src/build_xcode/omvll-ndk_unsigned.dylib
          output_path: ${{ github.workspace }}/src/build_xcode/omvll-ndk.dylib
          p12_file: ${{ github.workspace }}/scripts/certificates/SigningCertificate.p12
          p12_password: ${{ secrets.certificate_password }}
      - name: Generate distribution folder
        shell: bash
        run: |
          curl -LO https://www.python.org/ftp/python/3.10.7/Python-3.10.7.tgz
          tar xzvf Python-3.10.7.tgz --directory=${{ github.workspace }}/dist/
          cp ${{ github.workspace }}/src/build_xcode/omvll-xcode.dylib ${{ github.workspace }}/dist/
          cp ${{ github.workspace }}/src/build_xcode/omvll-ndk.dylib ${{ github.workspace }}/dist/
      - name: Get deploy version
        id: versioning
        run: |
          CURRENT_TAG="${{ github.event.release.tag_name }}"
          CURRENT_TAG="${CURRENT_TAG#v}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_TAG"
          NEXT_VERSION="${MAJOR}.$((MINOR + 1)).0"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
      - name: Generate deployment tar
        uses: a7ul/tar-action@v1.1.3
        id: compress
        with:
          command: c
          cwd: ${{ github.workspace }}/dist
          files: |
            ./omvll-xcode.dylib
            ./omvll-ndk.dylib
            ./Python-3.10.7
            ./sample-omvll-config.py
          outPath: ${{ github.workspace }}/dist/omvll_v${{ steps.versioning.outputs.next_version }}_macos.tar.gz
      - name: O-MVLL Deployment
        env:
          BUILD38_S3_KEY: ${{ secrets.BUILD38_S3_KEY }}
          BUILD38_S3_SECRET: ${{ secrets.BUILD38_S3_SECRET }}
        shell: bash
        run: |
          docker run \
            -v $GITHUB_WORKSPACE:/o-mvll \
            -e GITHUB_ACTIONS="true" \
            -e GITHUB_WORKSPACE=$GITHUB_WORKSPACE \
            -e GITHUB_REF=$GITHUB_REF \
            -e GITHUB_REPOSITORY=$GITHUB_REPOSITORY \
            -e BUILD38_S3_KEY=$BUILD38_S3_KEY \
            -e BUILD38_S3_SECRET=$BUILD38_S3_SECRET \
            --rm \
            openobfuscator/deployment python3 /o-mvll/.github/scripts/s3-deploy.py
